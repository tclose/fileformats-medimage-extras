[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "fileformats-medimage-extras"
description = "Classes for representing different file formats in Python classes for use in type hinting in data workflows"
readme = "README.rst"
requires-python = ">=3.8"
dependencies = [
    "fileformats >= 0.6",
    "fileformats-extras >= 0.2.1",
    "fileformats-medimage >= 0.3",
    "jq >=1.4.0",
    "nibabel >=5.0.0",
    "numpy >=1.20",
    "medimages4tests >=0.3.0",
    "pydicom >=2.3.1",
    "pydra >= 0.22.0",
    "pydra-dcm2niix",
    "pydra-mrtrix3",
]
license = {file = "LICENSE"}
authors = [
    {name = "Thomas G. Close", email = "tom.g.close@gmail.com"},
]
maintainers = [
    {name = "Thomas G. Close", email = "tom.g.close@gmail.com"},
]
keywords = [
    "file formats",
    "data",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "black",
    "pre-commit",
    "codespell",
    "flake8",
    "flake8-pyproject",
]
test = [
    "pytest >=6.2.5",
    "pytest-env>=0.6.2",
    "pytest-cov>=2.12.1",
    "codecov",
]

[project.urls]
repository = "https://github.com/ArcanaFramework/fileformats-medimage-extras"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "fileformats/extras/medimage/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["fileformats"]

[tool.black]
target-version = ['py38']
exclude = "fileformats/extras/medimage/_version.py"

[tool.codespell]
ignore-words = ".codespell-ignorewords"

[tool.flake8]
doctests = true
per-file-ignores = [
    "__init__.py:F401"
]
max-line-length = 88
select = "C,E,F,W,B,B950"
extend-ignore = ['E203', 'E501', 'E129', 'F403']
